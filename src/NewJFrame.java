
import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.print.Book;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Prateek
 */

public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    ImageIcon i1;
    public NewJFrame() {
        
        initComponents();
        int w = jPanel3.getWidth();
        int h = jPanel3.getHeight();
        BufferedImage bi = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        Graphics2D g = bi.createGraphics();
        jPanel3.paint(g);
        i1 = new ImageIcon(bi);
        myRecButton2.setToolTipText("Rectangle");
        myRoundRectButton2.setToolTipText("Round Rectangle");
        myOvalButton2.setToolTipText("Oval");
        
        myLineButton2.setToolTipText("Line");
        myFreeDrawButton2.setToolTipText("Free Draw");
        mySaveButton1.setToolTipText("Save");
        myOpenButton1.setToolTipText("Open");
        myPrinterButton1.setToolTipText("Print");
        myNewPageButton1.setToolTipText("New Page");
        //repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jSlider3 = new javax.swing.JSlider();
        jSlider4 = new javax.swing.JSlider();
        jPanel1 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        myOvalButton2 = new MyOvalButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        myRecButton2 = new MyRecButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        myLineButton2 = new MyLineButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        myFreeDrawButton2 = new MyFreeDrawButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        myRoundRectButton2 = new MyRoundRectButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        jCheckBox1 = new javax.swing.JCheckBox();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        jCheckBox2 = new javax.swing.JCheckBox();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        jSlider5 = new javax.swing.JSlider();
        jSeparator15 = new javax.swing.JToolBar.Separator();
        jButton1 = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        mySaveButton1 = new MySaveButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        myOpenButton1 = new MyOpenButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        myPrinterButton1 = new MyPrinterButton();
        jSeparator14 = new javax.swing.JToolBar.Separator();
        myNewPageButton1 = new MyNewPageButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JPopupMenu.Separator();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel3.setName(""); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(600, 400));
        jPanel3.setVerifyInputWhenFocusTarget(false);
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel3MouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });
        jPanel3.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanel3ComponentResized(evt);
            }
        });
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel3MouseDragged(evt);
            }
        });
        jPanel3.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jPanel4.setBackground(new java.awt.Color(50, 50, 50));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 175, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4);

        jSlider1.setBackground(new java.awt.Color(255, 153, 153));
        jSlider1.setForeground(new java.awt.Color(255, 51, 51));
        jSlider1.setMajorTickSpacing(50);
        jSlider1.setMaximum(255);
        jSlider1.setMinorTickSpacing(10);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2), "Red", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.red));
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSlider1.setName(""); // NOI18N
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        jPanel2.add(jSlider1);
        jSlider1.getAccessibleContext().setAccessibleName("");

        jSlider2.setBackground(new java.awt.Color(153, 255, 153));
        jSlider2.setForeground(new java.awt.Color(0, 153, 51));
        jSlider2.setMajorTickSpacing(50);
        jSlider2.setMaximum(255);
        jSlider2.setMinorTickSpacing(10);
        jSlider2.setPaintLabels(true);
        jSlider2.setPaintTicks(true);
        jSlider2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 138, 58), 2), "Green", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 102, 51)));
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });
        jPanel2.add(jSlider2);

        jSlider3.setBackground(new java.awt.Color(153, 153, 255));
        jSlider3.setForeground(new java.awt.Color(51, 51, 255));
        jSlider3.setMajorTickSpacing(50);
        jSlider3.setMaximum(255);
        jSlider3.setMinorTickSpacing(10);
        jSlider3.setPaintLabels(true);
        jSlider3.setPaintTicks(true);
        jSlider3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255), 2), "Blue", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 51, 204)));
        jSlider3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider3StateChanged(evt);
            }
        });
        jPanel2.add(jSlider3);

        jSlider4.setBackground(new java.awt.Color(204, 204, 204));
        jSlider4.setMajorTickSpacing(24);
        jSlider4.setMaximum(50);
        jSlider4.setMinimum(1);
        jSlider4.setMinorTickSpacing(6);
        jSlider4.setPaintLabels(true);
        jSlider4.setPaintTicks(true);
        jSlider4.setValue(1);
        jSlider4.setBorder(javax.swing.BorderFactory.createTitledBorder("Size"));
        jPanel2.add(jSlider4);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jToolBar2.setRollover(true);
        jToolBar2.add(jSeparator5);

        myOvalButton2.setFocusable(false);
        myOvalButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myOvalButton2.setMaximumSize(new java.awt.Dimension(80, 25));
        myOvalButton2.setMinimumSize(new java.awt.Dimension(80, 25));
        myOvalButton2.setPreferredSize(new java.awt.Dimension(80, 25));
        myOvalButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myOvalButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myOvalButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(myOvalButton2);
        jToolBar2.add(jSeparator2);

        myRecButton2.setFocusable(false);
        myRecButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myRecButton2.setMaximumSize(new java.awt.Dimension(80, 25));
        myRecButton2.setMinimumSize(new java.awt.Dimension(80, 25));
        myRecButton2.setPreferredSize(new java.awt.Dimension(80, 25));
        myRecButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myRecButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myRecButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(myRecButton2);
        jToolBar2.add(jSeparator4);

        myLineButton2.setFocusable(false);
        myLineButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myLineButton2.setMaximumSize(new java.awt.Dimension(80, 25));
        myLineButton2.setMinimumSize(new java.awt.Dimension(80, 25));
        myLineButton2.setPreferredSize(new java.awt.Dimension(80, 25));
        myLineButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myLineButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myLineButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(myLineButton2);
        jToolBar2.add(jSeparator7);

        myFreeDrawButton2.setFocusable(false);
        myFreeDrawButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myFreeDrawButton2.setMaximumSize(new java.awt.Dimension(80, 25));
        myFreeDrawButton2.setMinimumSize(new java.awt.Dimension(80, 25));
        myFreeDrawButton2.setPreferredSize(new java.awt.Dimension(80, 25));
        myFreeDrawButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myFreeDrawButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myFreeDrawButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(myFreeDrawButton2);
        jToolBar2.add(jSeparator3);

        myRoundRectButton2.setFocusable(false);
        myRoundRectButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myRoundRectButton2.setMaximumSize(new java.awt.Dimension(80, 25));
        myRoundRectButton2.setMinimumSize(new java.awt.Dimension(80, 25));
        myRoundRectButton2.setPreferredSize(new java.awt.Dimension(80, 25));
        myRoundRectButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myRoundRectButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myRoundRectButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(myRoundRectButton2);
        jToolBar2.add(jSeparator6);

        jButton2.setText("Text:");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton2);

        jTextField1.setText("jTextField1");
        jTextField1.setMinimumSize(new java.awt.Dimension(69, 22));
        jToolBar2.add(jTextField1);
        jToolBar2.add(jSeparator11);

        jCheckBox1.setText("Fill");
        jCheckBox1.setFocusable(false);
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jCheckBox1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jCheckBox1);
        jToolBar2.add(jSeparator12);

        jCheckBox2.setText("Dashed");
        jCheckBox2.setFocusable(false);
        jCheckBox2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jCheckBox2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jCheckBox2);
        jToolBar2.add(jSeparator8);

        jLabel1.setText("Alpha: ");
        jToolBar2.add(jLabel1);

        jSlider5.setMajorTickSpacing(50);
        jSlider5.setMinorTickSpacing(1);
        jSlider5.setValue(100);
        jToolBar2.add(jSlider5);
        jToolBar2.add(jSeparator15);

        jButton1.setText("Gradient/Texture");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton1);

        jPanel1.add(jToolBar2, java.awt.BorderLayout.CENTER);

        jToolBar1.setRollover(true);
        jToolBar1.add(jSeparator1);

        mySaveButton1.setText("mySaveButton1");
        mySaveButton1.setFocusable(false);
        mySaveButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mySaveButton1.setMaximumSize(new java.awt.Dimension(25, 25));
        mySaveButton1.setMinimumSize(new java.awt.Dimension(25, 25));
        mySaveButton1.setPreferredSize(new java.awt.Dimension(25, 25));
        mySaveButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mySaveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mySaveButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(mySaveButton1);
        jToolBar1.add(jSeparator9);

        myOpenButton1.setText("myOpenButton1");
        myOpenButton1.setFocusable(false);
        myOpenButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myOpenButton1.setMaximumSize(new java.awt.Dimension(25, 25));
        myOpenButton1.setMinimumSize(new java.awt.Dimension(25, 25));
        myOpenButton1.setPreferredSize(new java.awt.Dimension(25, 25));
        myOpenButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myOpenButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myOpenButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(myOpenButton1);
        jToolBar1.add(jSeparator10);

        myPrinterButton1.setFocusable(false);
        myPrinterButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myPrinterButton1.setMaximumSize(new java.awt.Dimension(25, 25));
        myPrinterButton1.setMinimumSize(new java.awt.Dimension(25, 25));
        myPrinterButton1.setPreferredSize(new java.awt.Dimension(25, 25));
        myPrinterButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myPrinterButton1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                myPrinterButton1MouseMoved(evt);
            }
        });
        myPrinterButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myPrinterButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(myPrinterButton1);
        jToolBar1.add(jSeparator14);

        myNewPageButton1.setText("myNewPageButton1");
        myNewPageButton1.setFocusable(false);
        myNewPageButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myNewPageButton1.setMaximumSize(new java.awt.Dimension(25, 25));
        myNewPageButton1.setMinimumSize(new java.awt.Dimension(25, 25));
        myNewPageButton1.setPreferredSize(new java.awt.Dimension(25, 25));
        myNewPageButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myNewPageButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myNewPageButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(myNewPageButton1);

        jPanel1.add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jMenu1.setText("File");

        jMenuItem8.setText("Save As");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuItem9.setText("Open");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);

        jMenuItem10.setText("Print");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Shape");

        jMenuItem1.setText("Circle");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("Rectangle");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setText("Line");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Free Draw");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Round Rectangle");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);
        jMenu3.add(jSeparator13);

        jCheckBoxMenuItem1.setText("Dashed");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setText("Fill");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jCheckBoxMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Shape s = new Shape();
    int type, shape = 0;
    Image bg, fg;
    int textureGradient;
    Color[]cc = new Color[2];
    File f1;
    int[]pDimensions = new int[2];
        
    int oldx, oldy;
    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        jPanel4.setBackground(new Color(jSlider1.getValue(),jSlider2.getValue(),jSlider3.getValue()));
    }//GEN-LAST:event_jSlider1StateChanged

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        // TODO add your handling code here:
        jPanel4.setBackground(new Color(jSlider1.getValue(),jSlider2.getValue(),jSlider3.getValue()));
    }//GEN-LAST:event_jSlider2StateChanged

    private void jSlider3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider3StateChanged
        // TODO add your handling code here:
        jPanel4.setBackground(new Color(jSlider1.getValue(),jSlider2.getValue(),jSlider3.getValue()));
    }//GEN-LAST:event_jSlider3StateChanged
    public int quadrant, thickness = 1;
    int newx, newy;
    public boolean dashed = false;
    public boolean filled = false;
    float alpha;
    private void myLineButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myLineButton2ActionPerformed
        // TODO add your handling code here:
        s = new Line();
    }//GEN-LAST:event_myLineButton2ActionPerformed

    private void myOvalButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myOvalButton2ActionPerformed
        // TODO add your handling code here:
        s = new Oval();
        
    }//GEN-LAST:event_myOvalButton2ActionPerformed

    private void myRoundRectButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myRoundRectButton2ActionPerformed
        // TODO add your handling code here:
        s = new RoundRect();
    }//GEN-LAST:event_myRoundRectButton2ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        try{
            this.save();
        }catch(Exception ex){
            Logger.getLogger(Shape.class.getName()).log(Level.SEVERE,null, ex);
        }         

    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        bg = this.createImage(jPanel3.getWidth(), jPanel3.getHeight());
        
        fg = this.createImage(jPanel3.getWidth(), jPanel3.getHeight());
        try{
            this.open();
        }catch(Exception ex){
            Logger.getLogger(Shape.class.getName()).log(Level.SEVERE,null, ex);
        } 
        repaint();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxMenuItem1.isSelected()){
            
            jCheckBox2.setSelected(true);
            dashed = true;
        }else{
            
            jCheckBox2.setSelected(false);
            dashed = false;
        }
        repaint();
        
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        PrinterJob pj = PrinterJob.getPrinterJob();
        PageFormat pf = pj.pageDialog(new PageFormat());
        if(pj.printDialog()){
            Book b = new Book();
            Printable printable = new MyPrintable(fg);
            b.append(printable, pf);
            pj.setPageable(b);
            try{
                pj.print();
            }catch (PrinterException ex){
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE,null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jPanel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseDragged
        // TODO add your handling code here:
        
        Graphics fgg = fg.getGraphics();
        
        
        
        
        if(!(s instanceof FreeDraw)){
            fgg.drawImage(bg,0, 0, null);
        }

        newx = evt.getX();
        newy = evt.getY();

        
        for (int j = 0; j<=8;j=j+2){
            fgg.drawLine(1+j,1+j,getWidth()-20-j,1+j);
            fgg.drawLine(getWidth()-20-j,1+j,getWidth()-20-j,getHeight()-234-j);
            fgg.drawLine(getWidth()-20-j,getHeight()-234-j,1+j,getHeight()-234-j);
            fgg.drawLine(1+j,getHeight()-234-j,1+j,1+j);
        }
        
        
        fgg.setColor(jPanel4.getBackground());
        Color c = fgg.getColor();
        
        
        Graphics2D g2d = (Graphics2D)fgg;
        float alpha = (float)jSlider5.getValue()/100;
        AlphaComposite ac = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha);
        g2d.setComposite(ac);
        
            
        if (s instanceof FreeDraw){
            
            
            
            
            BasicStroke bs = new BasicStroke(jSlider4.getValue());
            g2d.setStroke(bs);
            s.drawShape(oldx, oldy, newx, newy, c, g2d, quadrant, jSlider4.getValue(), dashed, filled, alpha, textureGradient, cc, f1, pDimensions);
            //
        }else{
            if (dashed == true){
            dashed = true;
            //Graphics2D g2d = (Graphics2D)fgg;
            float[] fa = {10, 10, 10};
            BasicStroke bs = new BasicStroke(jSlider4.getValue(), BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL,10, fa, 10);
            g2d.setStroke(bs);

            if (newx>oldx && newy>oldy){ //bottom right
                quadrant = 4;//4
                s.drawShape(oldx, oldy, newx - oldx, newy - oldy, c, g2d, quadrant, jSlider4.getValue(), dashed, filled, alpha, textureGradient, cc, f1, pDimensions);
            } else if (newx>oldx && newy<oldy){ //top right
                quadrant = 1;//1
                s.drawShape(oldx, newy, newx - oldx, oldy-newy, c, g2d, quadrant, jSlider4.getValue(), dashed, filled, alpha, textureGradient, cc, f1, pDimensions);
            } else if (newx<oldx && newy>oldy){ //bottom left
                quadrant = 3;//3
                s.drawShape(newx, oldy, oldx-newx ,newy-oldy, c, g2d, quadrant, jSlider4.getValue(), dashed, filled, alpha, textureGradient, cc, f1, pDimensions);
            } else if (newx<oldx && newy<oldy){ //top left
                quadrant = 2;//2
                s.drawShape(newx, newy, oldx-newx, oldy-newy, c, g2d, quadrant, jSlider4.getValue(), dashed, filled, alpha, textureGradient, cc, f1, pDimensions);
            }

        }else{
            dashed = false;
            //Graphics2D g2d = (Graphics2D)fgg;
            BasicStroke bs = new BasicStroke(jSlider4.getValue());
            g2d.setStroke(bs);
            
            if (newx>oldx && newy>oldy){ //bottom right
                quadrant = 4;//4
                s.drawShape(oldx, oldy, newx - oldx, newy - oldy, c, g2d, quadrant, jSlider4.getValue(), dashed, filled, alpha, textureGradient, cc, f1, pDimensions);
            } else if (newx>oldx && newy<oldy){ //top right
                quadrant = 1;//1
                s.drawShape(oldx, newy, newx - oldx, oldy-newy, c, g2d, quadrant, jSlider4.getValue(), dashed, filled, alpha, textureGradient, cc, f1, pDimensions);
            } else if (newx<oldx && newy>oldy){ //bottom left
                quadrant = 3;//3
                s.drawShape(newx, oldy, oldx-newx , newy-oldy, c, g2d, quadrant, jSlider4.getValue(), dashed, filled, alpha, textureGradient, cc, f1, pDimensions);
            } else if (newx<oldx && newy<oldy){ //top left
                quadrant = 2;//2
                s.drawShape(newx, newy, oldx-newx, oldy-newy, c, g2d, quadrant, jSlider4.getValue(), dashed, filled, alpha, textureGradient, cc, f1, pDimensions);
            }
            
        }  
        }
        
            
            
            
            
        //draw the new image
        Graphics g = jPanel3.getGraphics();
        g.drawImage(fg, 0, 0, null);
    }//GEN-LAST:event_jPanel3MouseDragged

    private void jPanel3ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel3ComponentResized
        // TODO add your handling code here:

        bg = this.createImage(jPanel3.getWidth(), jPanel3.getHeight());
        fg = this.createImage(jPanel3.getWidth(), jPanel3.getHeight());

        repaint();
        
    }//GEN-LAST:event_jPanel3ComponentResized

    private void jPanel3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseReleased
        // TODO add your handling code here:

        Graphics bgg = bg.getGraphics();
        bgg.drawImage(fg, 0, 0, null);

        newx = evt.getX();
        newy = evt.getY();

        Graphics g = jPanel3.getGraphics();

        g.setColor(jPanel4.getBackground());

        Color c = g.getColor();
        
        v.add(s); 
        
        //System.out.println("Quardrant: "+s.qd);
        s = s.newShape();
    }//GEN-LAST:event_jPanel3MouseReleased

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        // TODO add your handling code here:

        if (bg == null){
            bg = this.createImage(jPanel3.getWidth(), jPanel3.getHeight());
            fg = this.createImage(jPanel3.getWidth(), jPanel3.getHeight());
        }
        oldx = evt.getX();
        oldy = evt.getY();
        
        if(s instanceof Text){
            Graphics fgg = fg.getGraphics();
            fgg.drawImage(bg,0, 0, null);
            fgg.setColor(jPanel3.getBackground());
            Color color = fgg.getColor();
            
            fgg.setColor(Color.BLACK);
            jPanel3.paint(fgg);
            Graphics g = jPanel3.getGraphics();
            g.drawImage(fg, 0, 0, null);
            
            
            
        }
        
        
    }//GEN-LAST:event_jPanel3MousePressed

    private void mySaveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mySaveButton1ActionPerformed
        // TODO add your handling code here:
        try{
            this.save();
        }catch(Exception ex){
            Logger.getLogger(Shape.class.getName()).log(Level.SEVERE,null, ex);
        }  
    }//GEN-LAST:event_mySaveButton1ActionPerformed

    private void myFreeDrawButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myFreeDrawButton2ActionPerformed
        // TODO add your handling code here:
        s = new FreeDraw();
    }//GEN-LAST:event_myFreeDrawButton2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        s = new Text(jTextField1.getText());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void myOpenButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myOpenButton1ActionPerformed
        // TODO add your handling code here:
        bg = this.createImage(jPanel3.getWidth(), jPanel3.getHeight());
        fg = this.createImage(jPanel3.getWidth(), jPanel3.getHeight());
        try{
            this.open();
        }catch(Exception ex){
            Logger.getLogger(Shape.class.getName()).log(Level.SEVERE,null, ex);
        } 
        repaint();
    }//GEN-LAST:event_myOpenButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()){
            filled = true;
            jCheckBoxMenuItem2.setSelected(true);
        }else{
            filled = false;
            jCheckBoxMenuItem2.setSelected(false);
        }
        repaint();
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        s = new Oval();
        repaint();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        s = new Rect();
        repaint();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        s = new Line();
        repaint();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        s = new FreeDraw();
        repaint();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        s = new RoundRect();
        repaint();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void myPrinterButton1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myPrinterButton1MouseMoved
        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_myPrinterButton1MouseMoved

    private void myRecButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myRecButton2ActionPerformed
        // TODO add your handling code here:
        s = new Rect();
    }//GEN-LAST:event_myRecButton2ActionPerformed

    private void myPrinterButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myPrinterButton1ActionPerformed
        // TODO add your handling code here:
        PrinterJob pj = PrinterJob.getPrinterJob();
        PageFormat pf = pj.pageDialog(new PageFormat());
        if(pj.printDialog()){
            Book b = new Book();
            Printable printable = new MyPrintable(fg);
            b.append(printable, pf);
            pj.setPageable(b);
            try{
                pj.print();
            }catch (PrinterException ex){
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE,null, ex);
            }
        }
    }//GEN-LAST:event_myPrinterButton1ActionPerformed

    private void myNewPageButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myNewPageButton1ActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();
        revalidate();
        repaint();
        bg = null;
        fg = null;
        v.clear();
    }//GEN-LAST:event_myNewPageButton1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox2.isSelected()){
            jCheckBoxMenuItem1.setSelected(true);
            dashed = true;
        }else{
            jCheckBoxMenuItem1.setSelected(false);
            dashed = false;
        }
        repaint();
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxMenuItem2.isSelected()){
            jCheckBox1.setSelected(true);
            filled = true;
        }else{
            jCheckBox2.setSelected(false);
            filled = false;
        }
        repaint();
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        pDimensions[0] = jPanel3.getWidth();
        pDimensions[1] = jPanel3.getHeight();
        
        String[] menu = {"Linear", "Radial", "Texture"};
        
        String s = (String) JOptionPane.showInputDialog(new JFrame(), "Set Gradient", "Gradient Select", JOptionPane.QUESTION_MESSAGE, null, menu, menu[0]);
        
        if(s == "Linear"){
            textureGradient = 1;
            cc[0] = JColorChooser.showDialog(this, "Color Selector", null);
            
            cc[1] = JColorChooser.showDialog(this, "Color Selector", null);
            
            
            
        }else if (s == "Radial"){
            textureGradient = 2;
            cc[0] = JColorChooser.showDialog(this, "Color Selector", null);
            
            cc[1] = JColorChooser.showDialog(this, "Color Selector", null);
            
            
            
        }else if (s == "Texture"){
            
            textureGradient = 3;
            
            JFileChooser jfc = new JFileChooser(".");
            jfc.addChoosableFileFilter(new FileNameExtensionFilter("JPEG","jpg"));
            jfc.addChoosableFileFilter(new FileNameExtensionFilter("PNG","png"));
            if (JFileChooser.APPROVE_OPTION == jfc.showOpenDialog(null)) {
                f1 = jfc.getSelectedFile();
            }
        
        }else {
            textureGradient = -1;
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_jPanel3MouseClicked

    public void save()throws Exception{
        
        //BufferedImage image = new BufferedImage(jPanel3.getWidth(),jPanel3.getHeight(), BufferedImage.TYPE_INT_RGB);
        //jPanel3.paint(image.getGraphics());
        //ImageIO.write(image, "png", new File(""));
        
        
        
        JFileChooser jfc = new JFileChooser(".");  // The working directory 
        jfc.setFileFilter(new FileNameExtensionFilter("Object","file"));
        
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Image","png");
        jfc.addChoosableFileFilter(fnef);
        
        
        if (JFileChooser.APPROVE_OPTION == jfc.showSaveDialog(null)) {
            
            
            File f = jfc.getSelectedFile();
            
            
            if(jfc.getFileFilter()==fnef){
                ImageIO.write((BufferedImage)fg, "png", new File(f.toString()+".png"));
            }
            else{
                FileOutputStream fos = new FileOutputStream(f);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(v);
                oos.close();
                fos.close();
            }   
        }
    }
    
    public void open()throws Exception{
        JFileChooser jfc = new JFileChooser(".");  // The working directory 
        if (JFileChooser.APPROVE_OPTION == jfc.showOpenDialog(null)) {
            File f = jfc.getSelectedFile();
            FileInputStream fis = new FileInputStream(f);
            ObjectInputStream ois = new ObjectInputStream(fis);
            v = (ArrayList<Shape>)ois.readObject();
            ois.close();
            fis.close();
        }
    }
    
    
    
    ArrayList <Shape> v = new ArrayList();
    /**
     * @param args the command line arguments
     */
    
    /**
     *
     */
    @Override
    public void paint(Graphics g){
        super.paint(g);
        Graphics pg = jPanel3.getGraphics();
        pg.drawImage(i1.getImage(), 0, 0, jPanel3.getWidth(), jPanel3.getHeight(), null);
        
        for (int j = 0; j<=8;j=j+2){
            pg.drawLine(1+j,1+j,getWidth()-20-j,1+j);
            pg.drawLine(getWidth()-20-j,1+j,getWidth()-20-j,getHeight()-234-j);
            pg.drawLine(getWidth()-20-j,getHeight()-234-j,1+j,getHeight()-234-j);
            pg.drawLine(1+j,getHeight()-234-j,1+j,1+j);
        }
        
        
        
        //redrawing all the shapes
        
        for(int i = 0; i < v.size();i++){
            Graphics fgg = fg.getGraphics();
            fgg.drawImage(bg, 0, 0, null);
            
            Shape s2 = v.get(i);
            fgg.setColor(s2.color);
            
            if (s2 instanceof FreeDraw){
                s2.redraw(fgg);   
            }else{
                s2.drawShape(s2.x, s2.y, s2.width, s2.height, fgg.getColor(), fgg, s2.qd, s2.thick, s2.dash, s2.fill, s2.alpha1, s2.textgrad, s2.cColor, s2.fi, s2.panelDimensions);//redrawing 
            }
            
            //
            
            fgg.setColor(Color.BLACK);
            
            //redrawing the rectangles(frame of the window)
            Graphics2D g2d1 = (Graphics2D)fgg;
            BasicStroke bs1 = new BasicStroke(1);
            g2d1.setStroke(bs1);
            
            for (int j = 0; j<=8;j=j+2){
                fgg.drawLine(1+j,1+j,getWidth()-20-j,1+j);
                fgg.drawLine(getWidth()-20-j,1+j,getWidth()-20-j,getHeight()-234-j);
                fgg.drawLine(getWidth()-20-j,getHeight()-234-j,1+j,getHeight()-234-j);
                fgg.drawLine(1+j,getHeight()-234-j,1+j,1+j);
            }
            
            pg.drawImage(fg, 0, 0, null);
            
            Graphics bgg = bg.getGraphics();
            bgg.drawImage(fg, 0, 0, null);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator14;
    private javax.swing.JToolBar.Separator jSeparator15;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JSlider jSlider4;
    private javax.swing.JSlider jSlider5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private MyFreeDrawButton myFreeDrawButton2;
    private MyLineButton myLineButton2;
    private MyNewPageButton myNewPageButton1;
    private MyOpenButton myOpenButton1;
    private MyOvalButton myOvalButton2;
    private MyPrinterButton myPrinterButton1;
    private MyRecButton myRecButton2;
    private MyRoundRectButton myRoundRectButton2;
    private MySaveButton mySaveButton1;
    // End of variables declaration//GEN-END:variables
}
